<div style="margin: 5px;">
  <a href="{{root}}/"><button>Back</button></a>
</div>
<div id="loading" style="text-align: center;">Loading...</div>
<script src="js/override.js"></script>
<script src="js/utilities.js"></script>
<script>
;(() => {
  var main = {}

  function createText(tag, text, parent) {
    var node = document.createElement(tag), textNode = document.createTextNode(text)
    node.classList.add('noselect')
    node.appendChild(textNode)
    if (parent) parent.appendChild(node)
    return node
  }

  function initTable(games) {
    if (!games) {
      if (main.nogames) return
      if (main.table) {
        main.table.parentNode.detach()
        delete main.table
      }

      main.nogames = document.createElement('div').setStyle({textAlign: 'center'})
      .makeChildOf(document.body).addChildren(
        createText('p', 'No games currently running.')
        ,document.createElement('a').setAttributes('href','game?menu=new')
        .addChildren(createText('button', 'Start a New Game?'))
      )
    } else {
      if (main.table) return
      if (main.nogames) {
        main.nogames.detach()
        delete main.nogames
      }

      var wrapper = document.createElement('div')
      .setStyle({padding: '1em'}).makeChildOf(document.body)

      main.table = document.createElement('table').setStyle({textAlign: 'left'})
      .makeChildOf(wrapper).addChildren(
        document.createElement('tr')
        .addChildren(createText('td', 'Name'), createText('td', 'Players'))
      )

      function rowEvent(cb) {return event => {
        var row = null
        if (event.path[1].tagName === 'TR' && event.path[1].id) row = event.path[1]
        if (row) cb(row)
      }}

      document.body.addEventListener('touchstart', event => {
        var touch = event.touches[0], test = document.elementFromPoint(touch.clientX, touch.clientY)
        rowEvent(row => {
          main.targetRow = row
          row.setStyle({backgroundColor: '#446', color: '#FFF'})
        })({path: [test, test.parentNode]})
      })
      document.body.addEventListener('touchend', event => {
        if (main.targetRow) {
          main.targetRow.style.backgroundColor = main.targetRow.style.color = ''
          location.href = '/game?id=' + main.targetRow.id
        }
      })

      eventListeners(main.table, {
        mouseover: rowEvent(row => {
          row.style.backgroundColor = '#446'; row.style.color = '#FFF'
        })
        ,mousedown: rowEvent(row => row.style.backgroundColor = '#668')
        ,mouseup: rowEvent(row => {
          row.style.backgroundColor = '#446'; location.href = '/game?id=' + row.id
        })
        ,mouseout: rowEvent(row => row.style.backgroundColor = row.style.color = '')
      })
    }
  }

  ws.emit('games', games => {
    document.body.removeChild(document.getElementById('loading'))

    function refreshTable(games) {
      initTable(games.length)
      if (!main.table) return
      for (var i = 1; i < main.table.children.length; i++) {
        main.table.children[i].detach()
      }
      games.map(game => {
        var row = document.createElement('tr').makeChildOf(main.table)
        .setStyle({borderRadius: ''}).addChildren(
          createText('td', game.name || 'Game ' + game._id)
          ,createText(
            'td', game.players.map(p => p.name).join(', ') +
            (game.viewers ? ` (${game.viewers.length} viewers)` : '')
          )
        )
        row.id = game._id
      })
    }
    refreshTable(games)
    main.refresh = setInterval(() => ws.emit('games', refreshTable), 5000)
  })
})()
</script>
